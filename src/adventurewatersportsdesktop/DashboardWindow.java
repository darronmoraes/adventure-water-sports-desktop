/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package adventurewatersportsdesktop;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import models.BoatOwners;
import models.BookingTicket;
import org.json.JSONObject;

/**
 *
 * @author darro
 */
public class DashboardWindow extends javax.swing.JFrame {

    /**
     * Creates new form HomeWindow
     */
    public DashboardWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        label2 = new java.awt.Label();
        jMenuIssueTicket = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuAddBoat = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jMenuReport = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabIssueTicket = new javax.swing.JPanel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        jBtnIncrementPax = new javax.swing.JButton();
        jBtnDecrementPax = new javax.swing.JButton();
        jTextPaxCount = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        jTextFieldAmount = new javax.swing.JLabel();
        jPanelCommercialData = new javax.swing.JPanel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel12 = new javax.swing.JLabel();
        jTextFieldRegistrationNumber = new javax.swing.JTextField();
        jTextFieldTransportProprieter = new javax.swing.JTextField();
        jTextFieldContactNumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel13 = new javax.swing.JLabel();
        jToggleBtnCommercialVehicle = new javax.swing.JToggleButton();
        javax.swing.JButton jBtnTicket = new javax.swing.JButton();
        javax.swing.JButton jBtnClearTicket = new javax.swing.JButton();
        jTabAddBoat = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelAddBoat = new javax.swing.JPanel();
        tBoatRegNo = new java.awt.TextField();
        tBoatCapacity = new java.awt.TextField();
        lBoatCapacity = new java.awt.Label();
        lBoatRegNo = new java.awt.Label();
        lBoatOwner = new java.awt.Label();
        tBoatOwner = new java.awt.TextField();
        btnAddBoat = new java.awt.Button();
        btnClear = new java.awt.Button();
        jComboBoxBoatCapacity = new javax.swing.JComboBox<>();
        jPanelAddOwnerDetails = new javax.swing.JPanel();
        lEmail = new java.awt.Label();
        tEmail = new java.awt.TextField();
        lFirstName = new java.awt.Label();
        tFirstName = new java.awt.TextField();
        lLastName = new java.awt.Label();
        tLastName = new java.awt.TextField();
        lAddress = new java.awt.Label();
        tAddress = new java.awt.TextField();
        lContact = new java.awt.Label();
        tContact = new java.awt.TextField();
        lGender = new java.awt.Label();
        tGender = new java.awt.TextField();
        btnAddOwner = new java.awt.Button();
        btnClearOwner = new java.awt.Button();
        jTabReport = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label2.setText("Adventure Water Sports");

        jMenuIssueTicket.setBackground(new java.awt.Color(153, 153, 153));
        jMenuIssueTicket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuIssueTicketMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ISSUE TICKET");

        javax.swing.GroupLayout jMenuIssueTicketLayout = new javax.swing.GroupLayout(jMenuIssueTicket);
        jMenuIssueTicket.setLayout(jMenuIssueTicketLayout);
        jMenuIssueTicketLayout.setHorizontalGroup(
            jMenuIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuIssueTicketLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jMenuIssueTicketLayout.setVerticalGroup(
            jMenuIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuIssueTicketLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuAddBoat.setBackground(new java.awt.Color(153, 153, 153));
        jMenuAddBoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuAddBoatMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ADD BOAT");

        javax.swing.GroupLayout jMenuAddBoatLayout = new javax.swing.GroupLayout(jMenuAddBoat);
        jMenuAddBoat.setLayout(jMenuAddBoatLayout);
        jMenuAddBoatLayout.setHorizontalGroup(
            jMenuAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuAddBoatLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jMenuAddBoatLayout.setVerticalGroup(
            jMenuAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuAddBoatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuReport.setBackground(new java.awt.Color(153, 153, 153));
        jMenuReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuReportMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("REPORT");

        javax.swing.GroupLayout jMenuReportLayout = new javax.swing.GroupLayout(jMenuReport);
        jMenuReport.setLayout(jMenuReportLayout);
        jMenuReportLayout.setHorizontalGroup(
            jMenuReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuReportLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jMenuReportLayout.setVerticalGroup(
            jMenuReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMenuAddBoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jMenuReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addComponent(jMenuIssueTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jMenuIssueTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jMenuAddBoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jMenuReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Pax Count");

        jBtnIncrementPax.setText("+");
        jBtnIncrementPax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIncrementPaxActionPerformed(evt);
            }
        });

        jBtnDecrementPax.setText("-");
        jBtnDecrementPax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDecrementPaxActionPerformed(evt);
            }
        });

        jTextPaxCount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextPaxCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTextPaxCount.setText("0");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("per head price");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Amount");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("350");

        jTextFieldAmount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextFieldAmount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jTextFieldAmount.setText("Amount");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Registration no");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Transport Prop.");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Contact No.");

        jTextFieldRegistrationNumber.setText("GA-08-T-1214");
        jTextFieldRegistrationNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRegistrationNumberActionPerformed(evt);
            }
        });

        jTextFieldTransportProprieter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTransportProprieterActionPerformed(evt);
            }
        });

        jTextFieldContactNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContactNumberActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Commercial Vehicle");

        javax.swing.GroupLayout jPanelCommercialDataLayout = new javax.swing.GroupLayout(jPanelCommercialData);
        jPanelCommercialData.setLayout(jPanelCommercialDataLayout);
        jPanelCommercialDataLayout.setHorizontalGroup(
            jPanelCommercialDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommercialDataLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelCommercialDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCommercialDataLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCommercialDataLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldTransportProprieter, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCommercialDataLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldRegistrationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelCommercialDataLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelCommercialDataLayout.setVerticalGroup(
            jPanelCommercialDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommercialDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanelCommercialDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldRegistrationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelCommercialDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldTransportProprieter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelCommercialDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("DOLPHIN RIDE BOOKING");

        jToggleBtnCommercialVehicle.setText("Commercial Vehicle");
        jToggleBtnCommercialVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleBtnCommercialVehicleActionPerformed(evt);
            }
        });

        jBtnTicket.setText("Generate Ticket");
        jBtnTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTicketActionPerformed(evt);
            }
        });

        jBtnClearTicket.setText("Clear");
        jBtnClearTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnClearTicketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jTabIssueTicketLayout = new javax.swing.GroupLayout(jTabIssueTicket);
        jTabIssueTicket.setLayout(jTabIssueTicketLayout);
        jTabIssueTicketLayout.setHorizontalGroup(
            jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnDecrementPax, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPaxCount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jBtnIncrementPax, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(39, 39, 39))
                    .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                        .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanelCommercialData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleBtnCommercialVehicle))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jTabIssueTicketLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnTicket)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnClearTicket)
                .addGap(39, 39, 39))
            .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                    .addGap(133, 133, 133)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(141, Short.MAX_VALUE)))
        );
        jTabIssueTicketLayout.setVerticalGroup(
            jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jBtnIncrementPax)
                    .addComponent(jBtnDecrementPax)
                    .addComponent(jTextPaxCount, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleBtnCommercialVehicle)
                .addGap(18, 18, 18)
                .addComponent(jPanelCommercialData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnTicket)
                    .addComponent(jBtnClearTicket))
                .addGap(14, 14, 14))
            .addGroup(jTabIssueTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jTabIssueTicketLayout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(540, Short.MAX_VALUE)))
        );

        jTabbedPane1.setToolTipText("BOAT");

        tBoatRegNo.setText("textField1");
        tBoatRegNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tBoatRegNoActionPerformed(evt);
            }
        });

        tBoatCapacity.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tBoatCapacity.setName(""); // NOI18N
        tBoatCapacity.setText("textField2");
        tBoatCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tBoatCapacityActionPerformed(evt);
            }
        });

        lBoatCapacity.setText("Boat Capacity");

        lBoatRegNo.setText("Boat Reg no.");

        lBoatOwner.setText("Owner Name");

        tBoatOwner.setText("textField4");
        tBoatOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tBoatOwnerActionPerformed(evt);
            }
        });

        btnAddBoat.setLabel("Add Boat");
        btnAddBoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBoatActionPerformed(evt);
            }
        });

        btnClear.setLabel("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jComboBoxBoatCapacity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "10", "12", "14", "16", "18", "20" }));
        jComboBoxBoatCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBoatCapacityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddBoatLayout = new javax.swing.GroupLayout(jPanelAddBoat);
        jPanelAddBoat.setLayout(jPanelAddBoatLayout);
        jPanelAddBoatLayout.setHorizontalGroup(
            jPanelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddBoatLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAddBoatLayout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddBoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lBoatRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lBoatOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lBoatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tBoatRegNo, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                        .addComponent(tBoatOwner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelAddBoatLayout.createSequentialGroup()
                            .addComponent(tBoatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(21, 21, 21)
                            .addComponent(jComboBoxBoatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(251, Short.MAX_VALUE))
        );
        jPanelAddBoatLayout.setVerticalGroup(
            jPanelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddBoatLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(lBoatRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(tBoatRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lBoatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tBoatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBoatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAddBoatLayout.createSequentialGroup()
                        .addComponent(lBoatOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tBoatOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnAddBoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(226, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Boat Details", jPanelAddBoat);

        lEmail.setText("Email id");

        tEmail.setText("textField3");
        tEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tEmailActionPerformed(evt);
            }
        });

        lFirstName.setText("first name");

        tFirstName.setText("textField5");

        lLastName.setText("lastname");

        tLastName.setText("textField6");

        lAddress.setText("Address");

        tAddress.setText("textField7");

        lContact.setText("Contact");

        tContact.setText("textField8");

        lGender.setText("Gender");

        tGender.setText("textField9");

        btnAddOwner.setLabel("Add Owner");

        btnClearOwner.setLabel("Clear");

        javax.swing.GroupLayout jPanelAddOwnerDetailsLayout = new javax.swing.GroupLayout(jPanelAddOwnerDetails);
        jPanelAddOwnerDetails.setLayout(jPanelAddOwnerDetailsLayout);
        jPanelAddOwnerDetailsLayout.setHorizontalGroup(
            jPanelAddOwnerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddOwnerDetailsLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanelAddOwnerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddOwnerDetailsLayout.createSequentialGroup()
                .addContainerGap(341, Short.MAX_VALUE)
                .addComponent(btnClearOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnAddOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        jPanelAddOwnerDetailsLayout.setVerticalGroup(
            jPanelAddOwnerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddOwnerDetailsLayout.createSequentialGroup()
                .addGroup(jPanelAddOwnerDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAddOwnerDetailsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAddOwnerDetailsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(tFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(tAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(tContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(tGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(btnAddOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72))
        );

        jTabbedPane1.addTab("Add Owner Details ", jPanelAddOwnerDetails);

        javax.swing.GroupLayout jTabAddBoatLayout = new javax.swing.GroupLayout(jTabAddBoat);
        jTabAddBoat.setLayout(jTabAddBoatLayout);
        jTabAddBoatLayout.setHorizontalGroup(
            jTabAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabAddBoatLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jTabAddBoatLayout.setVerticalGroup(
            jTabAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabAddBoatLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabReport.setBackground(new java.awt.Color(102, 255, 153));

        javax.swing.GroupLayout jTabReportLayout = new javax.swing.GroupLayout(jTabReport);
        jTabReport.setLayout(jTabReportLayout);
        jTabReportLayout.setHorizontalGroup(
            jTabReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
        );
        jTabReportLayout.setVerticalGroup(
            jTabReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabIssueTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(jTabAddBoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabIssueTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabAddBoat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuIssueTicketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuIssueTicketMouseClicked
        // TODO add your handling code here:
        jTabIssueTicket.setVisible(true);
        jTabAddBoat.setVisible(false);
        jTabReport.setVisible(false);
        jTabbedPane1.setVisible(false);
    }//GEN-LAST:event_jMenuIssueTicketMouseClicked

    private void jMenuAddBoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuAddBoatMouseClicked
        // TODO add your handling code here:
        jTabIssueTicket.setVisible(false);
        jTabAddBoat.setVisible(true);
        jTabReport.setVisible(false);
        jTabbedPane1.setVisible(true);
    }//GEN-LAST:event_jMenuAddBoatMouseClicked

    private void jMenuReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuReportMouseClicked
        // TODO add your handling code here:
        jTabIssueTicket.setVisible(false);
        jTabAddBoat.setVisible(false);
        jTabReport.setVisible(true);
        jTabbedPane1.setVisible(false);
    }//GEN-LAST:event_jMenuReportMouseClicked


    private void jTextFieldTransportProprieterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTransportProprieterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTransportProprieterActionPerformed

    private void jTextFieldContactNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContactNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldContactNumberActionPerformed

    // Generate ticket on Button clicked
    private void jBtnTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTicketActionPerformed
        // TODO add your handling code here:
        
        // Get the TextField data for commercial bookings
        String registrationNumber = jTextFieldRegistrationNumber.getText();
        String proprieterName = jTextFieldTransportProprieter.getText();
        String contactNumber = jTextFieldContactNumber.getText();
        
        if (counter == 0 && estimatedAmount == 0) {
            JOptionPane.showMessageDialog(null, "Atleast 1 person is required to proceed with ticketing");
        } else if (counter != 0 && estimatedAmount != 0) {
            if (areVehicleDetailsEntered()) {     
                commercialApiCall(registrationNumber, proprieterName, contactNumber);
            } else {
                nonCommercialApiCall();
            }
        }
        
    }//GEN-LAST:event_jBtnTicketActionPerformed

    private void jBtnClearTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnClearTicketActionPerformed
        // TODO add your handling code here:
        
        // Clear the text Fields
        jTextPaxCount.setText("0");
        jTextFieldAmount.setText("0 Rs.");
        
        jTextFieldRegistrationNumber.setText("");
        jTextFieldTransportProprieter.setText("");
        jTextFieldContactNumber.setText("");
    }//GEN-LAST:event_jBtnClearTicketActionPerformed

    private void jToggleBtnCommercialVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleBtnCommercialVehicleActionPerformed
        // TODO add your handling code here:
        if(jToggleBtnCommercialVehicle.isSelected()) {
            jPanelCommercialData.setVisible(true);
        } else {
            jPanelCommercialData.setVisible(false);
        }
    }//GEN-LAST:event_jToggleBtnCommercialVehicleActionPerformed

    private void jBtnDecrementPaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDecrementPaxActionPerformed
        // TODO add your handling code here:
        if (counter > 0) {
            counter--;
        }
        
        jTextPaxCount.setText(String.valueOf(counter));
        
        if (counter != 0) {
            estimatedAmount = amountPerPaxRide(counter);
            jTextFieldAmount.setText(String.valueOf(estimatedAmount));
        } else {
            JOptionPane.showMessageDialog(null, "Requires pax above 1 to calculate estimated cost");
            jTextFieldAmount.setText("0");
        }
        
    }//GEN-LAST:event_jBtnDecrementPaxActionPerformed

    private void jBtnIncrementPaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIncrementPaxActionPerformed
        // TODO add your handling code here:
        counter++;
        
        jTextPaxCount.setText(String.valueOf(counter));
        
        estimatedAmount = amountPerPaxRide(counter);
        jTextFieldAmount.setText(String.valueOf(estimatedAmount));
    }//GEN-LAST:event_jBtnIncrementPaxActionPerformed

    private void jTextFieldRegistrationNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRegistrationNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRegistrationNumberActionPerformed

    private void tEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tEmailActionPerformed

    
    
/** ------------------------------  Add boat tab ----------------------------------------- */
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    
    private void tBoatRegNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tBoatRegNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tBoatRegNoActionPerformed

    private void tBoatCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tBoatCapacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tBoatCapacityActionPerformed

    private void tBoatOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tBoatOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tBoatOwnerActionPerformed

    private void jComboBoxBoatCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBoatCapacityActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBoxBoatCapacityActionPerformed

    private void btnAddBoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBoatActionPerformed
        // TODO add your handling code here:
        
        String boatRegNo = tBoatRegNo.getText();
        String boatCapacity = tBoatCapacity.getText();
        String boatOwnerId = tBoatOwner.getText();
        
        if(boatRegNo.isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter Reg no.");
        } else if(boatCapacity.isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter capacity");
        }else if(boatOwnerId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Enter User id");
        }
        
        if( !boatRegNo.isEmpty() && !boatCapacity.isEmpty() && !boatOwnerId.isEmpty()){
//            addBoatDetails(boatRegNo,boatCapacity,Integer.valueOf(boatOwnerId));
            getBoatOwners();
        }
    }//GEN-LAST:event_btnAddBoatActionPerformed

    
    
    

    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardWindow().setVisible(true);
            }
        });
    }
    
    // Custome Variable declaration 
    int counter = 0;
    int perHeadPrice = 350;
    int estimatedAmount = 0;
    
    // Custom methods to calculate ticket amount for the given pax
    private int amountPerPaxRide(int pax) {
        return perHeadPrice * pax;
    }
    
    // Non Commercial vehicle api call
    private void nonCommercialApiCall() {
        
        String nonCommercialApiURL = Constants.URL + Constants.NON_COMMERCIAL_BOOKING_ENDPOINT;
        
        
            try {
                // Create the JSON object with pax and amount
                JSONObject jsonRequest = new JSONObject();
                jsonRequest.put("pax", counter);
                jsonRequest.put("amount", estimatedAmount);
            
                // Open the connection and set up the request
                URL url = new URL(nonCommercialApiURL);
                HttpURLConnection connect = (HttpURLConnection) url.openConnection();
                connect.setRequestMethod("POST");
                connect.setRequestProperty("Content-Type", "application/json");
                connect.setDoOutput(true);
            
                // Write the JSON payload to request body
                try (OutputStream os = connect.getOutputStream()) {
                    byte[] input = jsonRequest.toString().getBytes("utf-8");
                    os.write(input, 0, input.length);
                } catch (IOException ex) {
                    Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            
                // Get the response from the server
                BufferedReader br = new BufferedReader(new InputStreamReader(connect.getInputStream()));
                StringBuilder response = new StringBuilder();
                String line;
                while((line = br.readLine()) != null) {
                    response.append(line);
                }
                
                // Parse the JSON response
                JSONObject jsonResponse = new JSONObject(response.toString());
                
                // Check if the status is 200 (success)
                if (jsonResponse.getInt("status") == 200) {
                    JSONObject result = jsonResponse.getJSONObject("result");
                    JSONObject order = result.getJSONObject("order");
                    
                    BookingTicket bookingData = new BookingTicket(
                            order.getString("serial_number"),
                            order.getInt("amount"),
                            order.getInt("pax")
                    );
                    
                    // Show the serial number, amount and pax in dialog
                    String message = "Serial Number: " + bookingData.getSerialNumber() +
                            "\nAmount: " + bookingData.getAmount() +
                            "\nPax: " + bookingData.getPax();
                    
                    JOptionPane.showMessageDialog(null, message);
                }
                
                br.close();
            
                // Print in the terminal the response
                System.out.println("Response " + response.toString());
            
                connect.disconnect();
            
            } catch (MalformedURLException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ProtocolException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    
    // Commercial API call
    private void commercialApiCall(String registrationNumber, String transportProp, String contactNumber) {
        String nonCommercialApiURL = Constants.URL + Constants.COMMERCIAL_BOOKING_ENDPOINT;
        
        
        try {
            // Create the JSON object with pax and amount
            JSONObject jsonRequest = new JSONObject();
            jsonRequest.put("pax", counter);
            jsonRequest.put("amount", estimatedAmount);
            jsonRequest.put("reg_no", registrationNumber);
            jsonRequest.put("name", transportProp);
            jsonRequest.put("contact", contactNumber);
            
            // Open the connection and set up the request
            URL url = new URL(nonCommercialApiURL);
            HttpURLConnection connect = (HttpURLConnection) url.openConnection();
            connect.setRequestMethod("POST");
            connect.setRequestProperty("Content-Type", "application/json");
            connect.setDoOutput(true);
            
            // Write the JSON payload to request body
            try (OutputStream os = connect.getOutputStream()) {
                byte[] input = jsonRequest.toString().getBytes("utf-8");
                os.write(input, 0, input.length);
            } catch (IOException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            // Get the response from the server
            BufferedReader br = new BufferedReader(new InputStreamReader(connect.getInputStream()));
            StringBuilder response = new StringBuilder();
            String line;
            while((line = br.readLine()) != null) {
                response.append(line);
            }
            br.close();
            
            // Parse the JSON response
            JSONObject jsonResponse = new JSONObject(response.toString());
                
            // Check if the status is 200 (success)
            if (jsonResponse.getInt("status") == 200) {
                JSONObject result = jsonResponse.getJSONObject("result");
                JSONObject order = result.getJSONObject("order");
                    
                BookingTicket bookingData = new BookingTicket(
                        order.getString("serial_number"),
                        order.getInt("amount"),
                        order.getInt("pax")
                );
                    
                // Show the serial number, amount and pax in dialog
                String message = "Serial Number: " + bookingData.getSerialNumber() +
                        "\nAmount: " + bookingData.getAmount() +
                        "\nPax: " + bookingData.getPax();
                    
                JOptionPane.showMessageDialog(null, message);
            }
            
            // Print in the terminal the response
            System.out.println("Response " + response.toString());
            
            connect.disconnect();
            
        } catch (MalformedURLException ex) {
            Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ProtocolException ex) {
            Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Check if Commercial vehicle details entered
    private boolean areVehicleDetailsEntered() {
        String registrationNumber = jTextFieldRegistrationNumber.getText();
        String proprieterName = jTextFieldTransportProprieter.getText();
        String contactNumber = jTextFieldContactNumber.getText();
        
        return !registrationNumber.isEmpty() && !proprieterName.isEmpty() && !contactNumber.isEmpty();
    }
    
    
    
    /** ------------------------------------ add boat details api call ---------------------------------- */
    
    public void addBoatDetails(String boatRegNo, String boatCapacity, Integer boatOwnerId){
        String addBoatDetailApiUrl = Constants.URL + Constants.ADD_BOAT_ENDPOINT;
         
         try {
                // Create the JSON object
                JSONObject jsonRequest = new JSONObject();
                jsonRequest.put("registration_no", boatRegNo);
                jsonRequest.put("capacity", boatCapacity);
                jsonRequest.put("user_id", boatOwnerId);
        
        
                URL url = new URL(addBoatDetailApiUrl);
                HttpURLConnection connect = (HttpURLConnection) url.openConnection();
                connect.setRequestMethod("POST");
                connect.setRequestProperty("Content-Type", "application/json");
                connect.setDoOutput(true);
        
            
                // Write the JSON payload to request body
                try (OutputStream os = connect.getOutputStream()) {
                    byte[] input = jsonRequest.toString().getBytes("utf-8");
                    os.write(input, 0, input.length);
                } catch (IOException ex) {
                    Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "hello developer");
                }
            
                // Get the response from the server
                BufferedReader br = new BufferedReader(new InputStreamReader(connect.getInputStream()));
                StringBuilder response = new StringBuilder();
                String line;
                while((line = br.readLine()) != null) {
                    response.append(line);
                }
                
                // Parse the JSON response
                JSONObject jsonResponse = new JSONObject(response.toString());
                
                
                // Check if the status is 200 (success)
                if (jsonResponse.getInt("status") == 200 || jsonResponse.getInt("status") == 410) {
                    String responseMessage = jsonResponse.getString("message");
                    
                    JOptionPane.showMessageDialog(null, responseMessage);
                }else{
                    JOptionPane.showMessageDialog(null, "connection failed");
                }
                
                br.close();
            
                // Print in the terminal the response
                System.out.println("Response " + response.toString());
            
                connect.disconnect();
            
            } catch (MalformedURLException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ProtocolException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Boad no. "+boatRegNo+" exist");
            }
        
        
        
    }
    
    /** ------------------------------------ GET boat owner details api call ---------------------------------- */
    
    public void getBoatOwners(){
        String getBoatOwnerdApiUrl = Constants.URL + Constants.GET_BOAT_OWNERS;
         
         try {
                URL url = new URL(getBoatOwnerdApiUrl);
                HttpURLConnection connect = (HttpURLConnection) url.openConnection();
                connect.setRequestMethod("GET");
                connect.setRequestProperty("Content-Type", "application/json");
                connect.setDoOutput(true);
        
            
//                // Write the JSON payload to request body
//                try (OutputStream os = connect.getOutputStream()) {
//                    byte[] input = jsonRequest.toString().getBytes("utf-8");
//                    os.write(input, 0, input.length);
//                } catch (IOException ex) {
//                    Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
//                    JOptionPane.showMessageDialog(null, "hello developer");
//                }
            
                // Get the response from the server
                BufferedReader br = new BufferedReader(new InputStreamReader(connect.getInputStream()));
                StringBuilder response = new StringBuilder();
                List<BoatOwners> boatOwnerDetails;
                String line;
                while((line = br.readLine()) != null) {
                    response.append(line);
                }
                
                // Parse the JSON response
                JSONObject jsonResponse = new JSONObject(response.toString());
                
//                if(!response.isEmpty()){
//                    boatOwnerDetails.setId(jsonResponse.getInt("id"));
//                }
//                
//                String fname = jsonResponse.getString("first_name");
//                JOptionPane.showMessageDialog(null, fname);
                
                
                
//                // Check if the status is 200 (success)
//                if (jsonResponse.getInt("status") == 200) {
//                    String responseMessage = jsonResponse.getString("message");
//                    
//                    JOptionPane.showMessageDialog(null, responseMessage);
//                }else{
//                    JOptionPane.showMessageDialog(null, "connection failed");
//                }
                
                br.close();
            
                // Print in the terminal the response
                System.out.println("Response " + response.toString());
            
                connect.disconnect();
            
            } catch (MalformedURLException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ProtocolException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(DashboardWindow.class.getName()).log(Level.SEVERE, null, ex);
//                JOptionPane.showMessageDialog(null, "Boad no. "+boatRegNo+" exist");
            }
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnAddBoat;
    private java.awt.Button btnAddOwner;
    private java.awt.Button btnClear;
    private java.awt.Button btnClearOwner;
    private javax.swing.JButton jBtnDecrementPax;
    private javax.swing.JButton jBtnIncrementPax;
    private javax.swing.JComboBox<String> jComboBoxBoatCapacity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jMenuAddBoat;
    private javax.swing.JPanel jMenuIssueTicket;
    private javax.swing.JPanel jMenuReport;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelAddBoat;
    private javax.swing.JPanel jPanelAddOwnerDetails;
    private javax.swing.JPanel jPanelCommercialData;
    private javax.swing.JPanel jTabAddBoat;
    private javax.swing.JPanel jTabIssueTicket;
    private javax.swing.JPanel jTabReport;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jTextFieldAmount;
    private javax.swing.JTextField jTextFieldContactNumber;
    private javax.swing.JTextField jTextFieldRegistrationNumber;
    private javax.swing.JTextField jTextFieldTransportProprieter;
    private javax.swing.JLabel jTextPaxCount;
    private javax.swing.JToggleButton jToggleBtnCommercialVehicle;
    private java.awt.Label lAddress;
    private java.awt.Label lBoatCapacity;
    private java.awt.Label lBoatOwner;
    private java.awt.Label lBoatRegNo;
    private java.awt.Label lContact;
    private java.awt.Label lEmail;
    private java.awt.Label lFirstName;
    private java.awt.Label lGender;
    private java.awt.Label lLastName;
    private java.awt.Label label2;
    private java.awt.TextField tAddress;
    private java.awt.TextField tBoatCapacity;
    private java.awt.TextField tBoatOwner;
    private java.awt.TextField tBoatRegNo;
    private java.awt.TextField tContact;
    private java.awt.TextField tEmail;
    private java.awt.TextField tFirstName;
    private java.awt.TextField tGender;
    private java.awt.TextField tLastName;
    // End of variables declaration//GEN-END:variables
}
